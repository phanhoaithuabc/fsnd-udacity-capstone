{
	"info": {
		"_postman_id": "31c7a088-0078-45e7-93d0-3d53e4c6a1a2",
		"name": "udacity-fsnd-capstone-restaurant-management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9392657"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains foods array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.foods).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/foods",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods-ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/foods-ingredient",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods-ingredient"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/foods",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/foods/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/foods/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "barista",
			"item": [
				{
					"name": "/foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains foods array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.foods).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/foods",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods-ingredient/",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/foods-ingredient/",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods-ingredient",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wTkNOVEEzTWpaQ1FUa3lRMEl6TmtORk0wWXhRVFUwT1RFMFFVVkNSRUpDT1RBME1EUXpOUSJ9.eyJpc3MiOiJodHRwczovL3VkYWNpdHktZnNuZC5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDY3MTQ4MTQ0MTcwNjk3MTI4OTMiLCJhdWQiOlsiZGV2IiwiaHR0cHM6Ly91ZGFjaXR5LWZzbmQuYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTU2MDg5MDE2MCwiZXhwIjoxNTYwODk3MzYwLCJhenAiOiJPSjVwQk9ZSURFa09FVFVmUWo1ajdsSDZFTFcwMkd1MCIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6ZHJpbmtzIiwiZ2V0OmRyaW5rcy1kZXRhaWwiXX0.j9ocW47_exQOkEa10ffh8eijGvrIMxnGRzCmbrXnfaN_8ULsgA7AnWYMtvP8RmPWvT9n8sReWnFuJajUHBUbnBO2GuJ4aM3-WDUBeJT0X_mpGUWs4lxaNTbIkWdiWPTsEiRnP3wT-dU_v3Olw2PB4UMajMIjSH-IdF2Y1CiJIOaM0gV44RGZRyRvj6C2_mOkMfoXxzw-HrVvTRCo1NcUPea5Bs04POni7azx-B7FstP_HLm0dEbbge4XbmovHwlIXknIoI8PbuGXeLBqE2hv8fErKFBuIykxzK0nErH5zSPCrkM-_9smb8TLGAH-E5j1KQb6SHDKtcV_QHnsUYFuXA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/foods",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/foods/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/foods/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImVBZENBSFE3NER2VXVMRHlJa3ViXyJ9.eyJpc3MiOiJodHRwczovL2Rldi1weW1vaWhtcTByazZueGd4LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NjM1ZTdjZjRjOGZkZmNkMTU1MmQ2YWEiLCJhdWQiOiJVZGFjaXR5LUlkZW50aXR5LUFjY2Vzcy1Db2ZmZWUtU2hvcCIsImlhdCI6MTcxNDg5MDgwOCwiZXhwIjoxNzE0ODk4MDA4LCJzY29wZSI6IiIsImF6cCI6IlZJcXlTeWZoaU5zQWc4NmtqYmNzUXFXSGpiREF2bWtOIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcyIsImdldDpkcmlua3MtZGV0YWlsIl19.IB8UUTUS-dLzENdGe1r9pVjt6UEC5dbXVIVxBlH1EONIeZtd4MHapRxaJOxuEUo99VNnR90Af-sfrnVQttgnsVHVeGXzMustkvyU_VH7UxREyvSWY4Kg44KK73Q0GXbUpR0M2vSOJy29oC4d892lvvPIQJEVc-KTvrVeaplURv0N0MbJd8c-uNKFfl28g6OAABGdImjRf7iJBRFTPrqsKLX0hxCF8HMmRQroHjAH1ohjGihVXu_sMikuhbdr0QlopeKhUkrBMTAtK_gdteUdQGoyLPyYQeAlZ6JjHTm6JpcIRKxktLW8ms3V2Eip9feoGmbWvmbPG8d7z7StRVriNA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "manager",
			"item": [
				{
					"name": "/foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains foods array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.foods).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/foods",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods-ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains foods array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.foods).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/foods-ingredient",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods-ingredient"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Miso-Butter Roast Chicken With Acorn Squash Panzanella 3\",\n    \"ingredient\": \"whole chicken, 2¾ tsp. kosher salt, divided, plus more, 2 small acorn squash\"\n}"
						},
						"url": {
							"raw": "{{host}}/foods",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains foods array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.foods).to.be.an('array')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Miso-Butter Roast Chicken With Acorn Squash Panzanella 2\"\n}"
						},
						"url": {
							"raw": "{{host}}/foods/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/foods/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/foods/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"foods",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImVBZENBSFE3NER2VXVMRHlJa3ViXyJ9.eyJpc3MiOiJodHRwczovL2Rldi1weW1vaWhtcTByazZueGd4LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NjNjNTAyMGNlNjRjY2RiN2Q1MTIzZTciLCJhdWQiOiJVZGFjaXR5LUNhcHN0b25lLVJlc3RhdXJhbnQtTWFuYWdlciIsImlhdCI6MTcxNTIzOTIwMCwiZXhwIjoxNzE1MjQ2NDAwLCJzY29wZSI6IiIsImF6cCI6ImRYazNQT0kxb0RtcW1EaTdLQVN4ZlUxWGJwTEpmMVNOIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmZvb2RzIiwiZ2V0OmZvb2RzIiwiZ2V0OmZvb2RzLWluZ3JlZGllbnQiLCJwYXRjaDpmb29kcyIsInBvc3Q6Zm9vZHMiXX0.bA3hdYC3-meVZQLraZ78BLQgt9-XsjwEr2s2bBzbhSosYy8pqtlfNomSiGeSWAni43bye7drefNsrR_URZlQSx_eekRPMKrXCo5ORrONXd-60kITGhYV0d-_hhNLlYwIYJ48bNwDUYnrst-ySHnIaxMGJTaWmhI9G4-vUdkdPMayE9o-P3SXmtPiAnVfLISQ1IxjCfgWqkjqj613HgXyN-uX1svBjtndX0OCNl0iyWy07iALwUwochM1w2QFahclsKhh3e3_dl8zkszbzMcRjLTNSsqtQ5SLfup5C7d47iA91mKMzMay1651isFOI0EnGknJlM2P4Yx7QRonDnDgww",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}